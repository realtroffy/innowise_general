version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  localstack:
    image: localstack/localstack:4.9.2
    environment:
      - SERVICES=s3
      - AWS_EXECUTION_ENV=True
      - DEBUG=1
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    volumes:
      - "./init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh"
      - localstack_data:/var/lib/localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  pgadmin:
    image: dpage/pgadmin4:2025-10-14-1
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgadmin4/pgpass
    entrypoint: >
      sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy

  image-service:
    build:
      context: ./image-service
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/image_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - AWS_S3_ENDPOINT_URL=http://localstack:4566
      - AWS_S3_REGION=us-east-1
      - AWS_S3_BUCKET_NAME=images
      - AWS_S3_ACCESS_KEY=test
      - AWS_S3_SECRET_KEY=test

  authentication-service:
    build:
      context: ./authentication-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - GATEWAY_BASE_URL=http://authentication-service:8080

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"

volumes:
  postgres_data:
  localstack_data: